[package]
name = "rustaclysm"
version = "0.1.0"
description = "A 3D reimplementation of Cataclysm: Dark Days Ahead using Bevy"
license = "AGPL-3.0-or-later"
readme = "readme.md"
repository = "https://github.com/papow65/rustaclysm"
authors = [ "papow65 <papow65@protonmail.com>" ]
exclude = [ "/screenshots/" ]
edition = "2021"
rust-version = "1.81" # should be latest stable

[workspace]
members = [ "crates/*" ]

[dependencies]
base64 = "0.22"
bevy = { version = "0.14", default-features = false, features = [ "bevy_asset", "bevy_core_pipeline", "bevy_pbr", "bevy_state", "bevy_text", "bevy_ui", "bevy_dev_tools", "ktx2", "multi_threaded", "png", "tonemapping_luts", "wayland", "x11" ] }
#bevy_dylib = "0.14.2" # Uncomment this line (once) when `cargo run --features bevy/dynamic_linking` does not look for the right version
bresenham = "0.1"
cdda_json_files = { path = "crates/cdda_json_files" }
either = "1"
float-ord = "0.3"
futures-lite = "2"
glob = "0.3"
pathfinding = "4"
fastrand = "2"
regex = "1"
serde = { version = "1", features = ["derive", "rc" ] }
serde_json = "1"
thread_local = "1"
time = "0.3"
units = { path = "crates/units" }

[features]
log_archetypes = [] # print archetypes in use

[profile.dev]
opt-level = 3 # inspired by https://bevy-cheatbook.github.io/pitfalls/performance.html

[profile.release]
debug = "line-tables-only" # For useful bug reports
lto = "thin"
panic = 'abort'

[lints.rust]
# Forbidden groups
keyword_idents = { level = "forbid", priority = -1 }
# Forbidden linsts
absolute_paths_not_starting_with_crate = "forbid"
ambiguous_associated_items = "forbid"
anonymous_parameters = "forbid"
array_into_iter = "forbid"
bare_trait_objects = "forbid"
cenum_impl_drop_cast = "forbid"
coherence_leak_check = "forbid"
conflicting_repr_hints = "forbid"
const_evaluatable_unchecked = "forbid"
deref_into_dyn_supertrait = "forbid"
ellipsis_inclusive_range_patterns = "forbid"
explicit_outlives_requirements = "forbid"
forbidden_lint_groups = "forbid"
ill_formed_attribute_input = "forbid"
invalid_doc_attributes = "forbid"
invalid_type_param_default = "forbid"
late_bound_lifetime_arguments = "forbid"
legacy_derive_helpers = "forbid"
macro_expanded_macro_exports_accessed_by_absolute_paths = "forbid"
missing_fragment_specifier = "forbid"
non_fmt_panics = "forbid"
non_snake_case = "forbid"
order_dependent_trait_objects = "forbid"
patterns_in_fns_without_body = "forbid"
private_interfaces = "forbid"
private_bounds = "forbid"
proc_macro_derive_resolution_fallback = "forbid"
pub_use_of_private_extern_crate = "forbid"
rust_2021_incompatible_closure_captures = "forbid"
rust_2021_incompatible_or_patterns = "forbid"
rust_2021_prefixes_incompatible_syntax = "forbid"
rust_2021_prelude_collisions = "forbid"
semicolon_in_expressions_from_macros = "forbid"
soft_unstable = "forbid"
tyvar_behind_raw_pointer = "forbid"
uninhabited_static = "forbid"
unsafe_code = "forbid"
unstable_name_collisions = "forbid"
unsupported_calling_conventions = "forbid"
# Denied
non_camel_case_types = "deny"
non_upper_case_globals = "deny"
unreachable_code = "deny"
unreachable_pub = "deny"
unused_attributes = "deny"
unused_extern_crates = "deny"
unused_macros = "deny"
# Warned
dead_code = "warn"

[lints.clippy]
# Denied categories
complexity = { level = "deny", priority = -1 }
correctness = { level = "deny", priority = -1 }
pedantic = { level = "deny", priority = -1 }
perf = { level = "deny", priority = -1 }
style = { level = "deny", priority = -1 }
suspicious = { level = "deny", priority = -1 }
# Denied lints from allowed categories
assertions_on_result_states = "deny"
cognitive_complexity = "deny"
collection_is_never_read = "deny"
debug_assert_with_mut_call = "deny"
disallowed_script_idents = "deny"
empty_line_after_doc_comments = "deny"
empty_line_after_outer_attr = "deny"
equatable_if_let = "deny"
future_not_send = "deny"
infinite_loop = "deny"
iter_on_empty_collections = "deny"
iter_on_single_items = "deny"
iter_with_drain = "deny"
join_absolute_paths = "deny"
large_stack_frames = "deny"
missing_assert_message = "deny"
missing_const_for_fn = "deny"
mixed_read_write_in_expression = "deny"
modulo_arithmetic = "deny"
mutex_integer = "deny"
needless_collect = "deny"
needless_pass_by_ref_mut = "deny"
nonstandard_macro_braces = "deny"
option_map_or_err_ok = "deny"
or_fun_call = "deny"
path_buf_push_overwrite = "deny"
read_zero_byte_vec = "deny"
redundant_clone = "deny"
repeat_vec_with_capacity = "deny"
semicolon_inside_block = "deny"
str_to_string = "deny"
string_lit_chars_any = "deny"
string_slice = "deny"
string_to_string = "deny"
suspicious_operation_groupings = "deny"
test_attr_in_doctest = "deny"
tests_outside_test_module = "deny"
trait_duplication_in_bounds = "deny"
tuple_array_conversions = "deny"
type_repetition_in_bounds = "deny"
unwrap_used = "deny"
use_self = "deny"
uninhabited_references = "deny"
unneeded_field_pattern = "deny"
unseparated_literal_suffix = "deny"
useless_let_if_seq = "deny"
verbose_file_reads = "deny"
while_float = "deny"
# Exceptions for allowed lints from denied categories
cast_possible_truncation = { level = "allow", priority = 1 }
cast_precision_loss = { level = "allow", priority = 1 }
cast_possible_wrap = { level = "allow", priority = 1 }
cast_sign_loss = { level = "allow", priority = 1 }
match_wildcard_for_single_variants = { level = "allow", priority = 1 }
module_name_repetitions = { level = "allow", priority = 1 }
redundant_else = { level = "allow", priority = 1 }
similar_names = { level = "allow", priority = 1 }
struct_field_names = { level = "allow", priority = 1 } # doens't work well with CDDA data
too_many_arguments = { level = "allow", priority = 1 } # doesn't work well with bevy
trivially_copy_pass_by_ref = { level = "allow", priority = 1 }
type_complexity = { level = "allow", priority = 1 } # doesn't work well with bevy
