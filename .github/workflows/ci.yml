on:
  push:
    branches:
      - 'main'

name: CI

jobs:
  check_and_test:
    name: Check and test
    runs-on: ubuntu-latest
    env:
      CARGO_TERM_COLOR: always
    steps:
      - name: 'Install required libraries'
        run: sudo apt install -y libwayland-dev libxkbcommon-dev
      - name: 'git checkout'
        uses: actions/checkout@v4
      - name: 'Install cargo'
        uses: dtolnay/rust-toolchain@stable
      - name: 'Check'
        run: cargo check
      - name: 'Test'
        run: cargo test
  build:
    strategy:
      matrix:
        os:
          - {github: ubuntu-latest, short: linux, ext: ''}
          - {github: macos-latest, short: macos, ext: ''}
          - {github: windows-latest, short: windows, ext: '.exe'}
      fail-fast: false
    name: Build and release on ${{ matrix.os.github }}
    runs-on: ${{ matrix.os.github }}
    env:
      CARGO_TERM_COLOR: always
    needs: check_and_test
    steps:
      - name: 'Install required libraries'
        if: runner.os == 'Linux'
        run: sudo apt install -y libwayland-dev libxkbcommon-dev
      - name: 'git checkout'
        uses: actions/checkout@v4
      - name: 'Install cargo'
        uses: dtolnay/rust-toolchain@stable
      - name: 'Print rustc verion'
        run: rustc --version --verbose
      - name: 'Build'
        run: cargo build --release
      - name: 'List built files'
        run: 'ls -l target/release'
      - name: 'Rename'
        run: mv target/release/rustaclysm${{ matrix.os.ext }} rustaclysm-${{ matrix.os.short }}${{ matrix.os.ext }}
      - name: 'Zip'
        uses: thedoctor0/zip-release@0.7.1
        with:
          type: 'zip'
          filename: "rustaclysm-${{ matrix.os.short }}.zip"
          path: rustaclysm-${{ matrix.os.short }}* assets
      - name: 'Upload as artifact'
        uses: actions/upload-artifact@v3
        with:
          path: rustaclysm-${{ matrix.os.short }}.zip
          if-no-files-found: error
  release:
    name: Release
    runs-on: ubuntu-latest
    env:
      CARGO_TERM_COLOR: always
    needs: build
    permissions:
      contents: write
    steps:
      - name: 'Get all artifacts'
        uses: actions/download-artifact@v3
      - name: 'List files to release'
        run: 'ls -l artifact'
      - name: 'Create a release'
        uses: ncipollo/release-action@v1
        with:
          artifacts: "artifact/*"
          generateReleaseNotes: true
          makeLatest: true
          tag: ci-${{ github.run_number }}-${{ github.run_attempt }}
